service: xpay-backend
frameworkVersion: '3'

useDotenv: true

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-plugin-typescript
  - serverless-tscpaths


provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    USERS_TABLE_NAME: ${self:custom.UsersTable.name}
    BALANCES_TABLE_NAME: ${self:custom.BalancesTable.name}
    EARNINGS_TABLE_NAME: ${self:custom.EarningsTable.name}
  iamRoleStatements:
    - ${file(iam/UsersTableIAM.yml):UsersTableIAM}
    - ${file(iam/BalancesTableIAM.yml):BalancesTableIAM}
    - ${file(iam/EarningsTableIAM.yml):EarningsTableIAM}

resources:
  Resources:
    UsersTable: ${file(resources/XpayUsersTable.yml):UsersTable}
    BalancesTable: ${file(resources/XpayBalancesTable.yml):BalancesTable}
    EarningsTable: ${file(resources/XpayEarningsTable.yml):EarningsTable}

functions:
  api:
    handler: src/main.handler
    events:
      - http:
          path: '/{proxy+}'
          method: ANY
      # - httpApi: '*'

custom:
  UsersTable:
    name: !Ref UsersTable
    arn: !GetAtt UsersTable.Arn
  BalancesTable:
    name: !Ref BalancesTable
    arn: !GetAtt BalancesTable.Arn
  EarningsTable:
    name: !Ref EarningsTable
    arn: !GetAtt EarningsTable.Arn

  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
